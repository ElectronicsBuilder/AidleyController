/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/splashscreen_screen/splashScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

splashScreenViewBase::splashScreenViewBase()
{
    __background.setPosition(0, 0, 170, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    boxWithBorderMain.setPosition(0, 0, 170, 320);
    boxWithBorderMain.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorderMain.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorderMain.setBorderSize(5);
    add(boxWithBorderMain);

    textAidley.setXY(12, 7);
    textAidley.setColor(touchgfx::Color::getColorFromRGB(255, 0, 225));
    textAidley.setLinespacing(0);
    textAidley.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CU43));
    add(textAidley);

    digitalClock.setPosition(117, 215, 53, 18);
    digitalClock.setColor(touchgfx::Color::getColorFromRGB(99, 110, 230));
    digitalClock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V6FG));
    digitalClock.displayLeadingZeroForHourIndicator(true);
    digitalClock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    digitalClock.setTime24Hour(0, 0, 0);
    add(digitalClock);

    droneImage.setXY(0, 96);
    droneImage.setBitmap(touchgfx::Bitmap(BITMAP_DRONE_170_FW_ID));
    add(droneImage);

    textApplication.setXY(8, 65);
    textApplication.setColor(touchgfx::Color::getColorFromRGB(255, 150, 3));
    textApplication.setLinespacing(0);
    textApplication.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KKGQ));
    add(textApplication);

    AppStatusBox.setPosition(0, 233, 169, 37);
    AppStatusBox.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    AppStatusBox.setBorderColor(touchgfx::Color::getColorFromRGB(217, 217, 217));
    AppStatusBox.setBorderSize(3);
    add(AppStatusBox);

    progressBarBox.setPosition(1, 280, 168, 33);
    progressBarBox.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    progressBarBox.setBorderColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    progressBarBox.setBorderSize(3);
    add(progressBarBox);

    AppStatus.setPosition(5, 239, 158, 25);
    AppStatus.setColor(touchgfx::Color::getColorFromRGB(0, 229, 250));
    AppStatus.setLinespacing(0);
    Unicode::snprintf(AppStatusBuffer, APPSTATUS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OGZW).getText());
    AppStatus.setWildcard(AppStatusBuffer);
    AppStatus.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LASD));
    add(AppStatus);

    boxProgress1.setXY(35, 287);
    boxProgress1.setProgressIndicatorPosition(0, 0, 100, 18);
    boxProgress1.setRange(0, 100);
    boxProgress1.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    boxProgress1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BOXPROGRESS_THICK_TINY_ID));
    boxProgress1.setColor(touchgfx::Color::getColorFromRGB(0, 240, 255));
    boxProgress1.setValue(0);
    add(boxProgress1);
}

splashScreenViewBase::~splashScreenViewBase()
{

}

void splashScreenViewBase::setupScreen()
{

}
